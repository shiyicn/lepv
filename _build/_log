### Starting build.
# Target: test.ml.depends, tags: { extension:ml, file:test.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules test.ml > test.ml.depends
# Target: fourier_motzkin.ml.depends, tags: { extension:ml, file:fourier_motzkin.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules fourier_motzkin.ml > fourier_motzkin.ml.depends # cached
# Target: frac.ml.depends, tags: { extension:ml, file:frac.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules frac.ml > frac.ml.depends # cached
# Target: frac.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:frac.cmo, file:frac.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o frac.cmo frac.ml # cached
# Target: tree.ml.depends, tags: { extension:ml, file:tree.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules tree.ml > tree.ml.depends # cached
# Target: cs.ml.depends, tags: { extension:ml, file:cs.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules cs.ml > cs.ml.depends # cached
# Target: cs.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:cs.cmo, file:cs.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o cs.cmo cs.ml # cached
# Target: tree.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:tree.cmo, file:tree.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o tree.cmo tree.ml # cached
# Target: fourier_motzkin.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:fourier_motzkin.cmo, file:fourier_motzkin.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o fourier_motzkin.cmo fourier_motzkin.ml # cached
# Target: test.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:test.cmo, file:test.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o test.cmo test.ml
+ ocamlfind ocamlc -c -o test.cmo test.ml
File "test.ml", line 20, characters 0-5:
Error: Unbound value naive
Hint: Did you mean raise?
Command exited with code 2.
# Compilation unsuccessful.
